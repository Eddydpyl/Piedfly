apply plugin: 'com.android.application'

ext {
    travisBuild = System.getenv("TRAVIS") == "true"
    preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
    supportLibVersion = '26.1.0'
    playServicesVersion = '11.4.2'
    architectureComponents = '1.0.0'
    daggerVersion = '2.11'
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "dpyl.eddy.piedfly"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "auto"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // This enables long timeouts required on slow environments, e.g. Travis CI
    adbOptions {
        timeOutInMs 20 * 60 * 1000  // 20 minutes
        installOptions "-d", "-t"
    }
    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }
    lintOptions {
        disable 'MissingTranslation'
        lintConfig file("lint.xml")
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:support-vector-drawable:${supportLibVersion}"
    implementation "com.android.support:animated-vector-drawable:${supportLibVersion}"
    implementation "com.android.support:customtabs:${supportLibVersion}"
    implementation "com.android.support:palette-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.google.android.gms:play-services-location:${playServicesVersion}"
    implementation "com.google.android.gms:play-services-maps:${playServicesVersion}"
    implementation "com.google.firebase:firebase-core:${playServicesVersion}"
    implementation "com.google.firebase:firebase-database:${playServicesVersion}"
    implementation "com.google.firebase:firebase-auth:${playServicesVersion}"
    implementation "com.google.firebase:firebase-messaging:${playServicesVersion}"
    implementation "com.google.firebase:firebase-storage:${playServicesVersion}"
    implementation 'com.firebase:geofire-android:2.1.2'
    implementation 'com.firebaseui:firebase-ui:3.1.0'
    implementation 'com.dmitrymalkovich.android:material-design-dimens:1.4'
    implementation 'com.github.MichaelStevan:slidetoact:v0.3.0'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
    implementation "android.arch.persistence.room:runtime:${architectureComponents}"
    annotationProcessor "android.arch.persistence.room:compiler:${architectureComponents}"
    implementation "android.arch.lifecycle:extensions:${architectureComponents}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation 'com.mikepenz:actionitembadge:3.3.2@aar'
    implementation 'com.mikepenz:iconics-core:3.0.0@aar'
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'